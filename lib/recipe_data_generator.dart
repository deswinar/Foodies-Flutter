import 'dart:math';

import 'package:cloud_firestore/cloud_firestore.dart';
import '../injection/service_locator.dart';

import 'core/constants.dart';
import 'features/recipes/data/model/recipe_model.dart';

class RecipeDataGenerator {
  final Random _random = Random();

  // Generates a random recipe with realistic data
  Recipe generateRecipe() {
    final titles = [
      "Classic Spaghetti Carbonara",
      "Thai Green Curry",
      "Beef Tacos with Salsa",
      "French Crêpe Suzette",
      "Chicken Caesar Salad",
      "Vegetable Spring Rolls",
      "Margherita Pizza",
      "Miso Soup",
      "Baklava",
      "Argentinian Empanadas",
    ];

    final descriptions = [
      "A traditional Italian pasta dish with creamy egg-based sauce, crispy pancetta, and a touch of Parmesan cheese.",
      "A flavorful Thai curry made with green curry paste, coconut milk, chicken, and a medley of fresh vegetables.",
      "Mexican-style tacos filled with seasoned ground beef, fresh tomato salsa, and a sprinkle of cheese.",
      "A decadent French dessert featuring thin pancakes flambéed in orange sauce and served with vanilla ice cream.",
      "A refreshing salad with crispy romaine lettuce, grilled chicken, crunchy croutons, and Caesar dressing.",
      "Crispy vegetable spring rolls served with sweet chili dipping sauce, perfect as an appetizer or snack.",
      "Classic Italian pizza topped with fresh basil, mozzarella, and tomato sauce on a thin crust.",
      "A warm Japanese soup made with miso paste, tofu, seaweed, and scallions.",
      "A rich and sweet Middle Eastern pastry made with layers of filo dough, nuts, and honey syrup.",
      "Savory pastry turnovers filled with spiced meat, a specialty of Argentina."
    ];

    final ingredientsPool = [
      "Eggs",
      "Flour",
      "Sugar",
      "Milk",
      "Butter",
      "Chicken",
      "Pasta",
      "Parmesan Cheese",
      "Pancetta",
      "Tomatoes",
      "Lettuce",
      "Curry Paste",
      "Coconut Milk",
      "Ground Beef",
      "Tortillas",
      "Basil",
      "Mozzarella",
      "Soy Sauce",
      "Garlic",
      "Olive Oil",
    ];

    final stepsPool = [
      "Preheat the oven to 180°C (350°F).",
      "Boil water in a large pot and cook pasta until al dente.",
      "Heat oil in a skillet and sauté garlic until fragrant.",
      "Combine all ingredients in a bowl and mix well.",
      "Marinate the chicken for at least 30 minutes.",
      "Bake for 20-25 minutes or until golden brown.",
      "Serve hot and enjoy your dish!",
      "Prepare the sauce by blending all sauce ingredients.",
      "Roll the dough into thin sheets and cut into circles.",
      "Simmer the curry for 15-20 minutes until the flavors meld."
    ];

    final title = titles[_random.nextInt(titles.length)];
    final description = descriptions[_random.nextInt(descriptions.length)];
    final ingredients = List.generate(
      _random.nextInt(6) + 5,
      (_) => ingredientsPool[_random.nextInt(ingredientsPool.length)],
    ).toSet().toList(); // Ensure unique ingredients
    final steps = List.generate(
      _random.nextInt(3) + 5,
      (_) => stepsPool[_random.nextInt(stepsPool.length)],
    );

    final tags = [categories[_random.nextInt(categories.length)]];
    final country = countries[_random.nextInt(countries.length)];

    return Recipe(
      id: "", // This will be generated by Firestore
      userId: "1OqyvdDU1QUphbCOeISXmTGrZwB2",
      title: title,
      description: description,
      imageUrls: [
        "https://via.placeholder.com/150/92c952",
        "https://via.placeholder.com/150/771796",
      ],
      thumbnailUrl: "https://via.placeholder.com/150/771796",
      youtubeVideoUrl: null, // Optional
      ingredients: ingredients,
      steps: steps,
      tags: tags,
      commentsCount: 0,
      shareCount: 0,
      createdAt: DateTime.now(),
      likesCount: 0,
      category: tags.first,
      country: country,
      portion: "Serves ${_random.nextInt(4) + 2}",
      cookingDuration: "${_random.nextInt(60) + 10} mins",
    );
  }

  // Generate and add multiple recipes to Firestore
  Future<void> generateAndAddRecipes(int count) async {
    for (int i = 0; i < count; i++) {
      final recipe = generateRecipe();
      await getIt<FirebaseFirestore>()
          .collection('recipes')
          .add(recipe.toMap());
    }
  }
}
